/*       
Copyright (c) Microsoft. All rights reserved.
Licensed under the MIT license. See LICENSE file in the project root for full license information.
*/
{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "AuthorizationRules_RootManageSharedAccessKey_name": {
            "defaultValue": "RootManageSharedAccessKey",
            "type": "String"
        },
        "namespaces_name": {
            "defaultValue": "def-nsp",
            "type": "String"
        },
        "eventhubs_name": {
            "defaultValue": "def-eh",
            "type": "String"
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        }
    },
    "variables": {
        "consumergroup_name": "$Default",
        "ehVersion": "2017-04-01",
        "authRuleResourceId": "[resourceId('Microsoft.Eventhub/namespaces/authorizationRules', parameters('namespaces_name'), parameters('AuthorizationRules_RootManageSharedAccessKey_name'))]"
    },
    "resources": [
        {
            "type": "Microsoft.EventHub/namespaces",
            "sku": {
                "name": "Standard",
                "tier": "Standard",
                "capacity": 3
            },
            "name": "[parameters('namespaces_name')]",
            "apiVersion": "2017-04-01",
            "location": "[parameters('location')]",
            "scale": null,
            "properties": {
                "isAutoInflateEnabled": false,
                "maximumThroughputUnits": 0
            },
            "dependsOn": [
            ]
        },
        {
            "type": "Microsoft.EventHub/namespaces/AuthorizationRules",
            "name": "[concat(parameters('namespaces_name'), '/', parameters('AuthorizationRules_RootManageSharedAccessKey_name'))]",
            "apiVersion": "2017-04-01",
            "location": "[parameters('location')]",
            "scale": null,
            "properties": {
                "rights": [
                    "Listen",
                    "Manage",
                    "Send"
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_name'))]"
            ]
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "name": "[concat(parameters('namespaces_name'), '/', parameters('eventhubs_name'))]",
            "apiVersion": "2017-04-01",
            "location": "[parameters('location')]",
            "scale": null,
            "properties": {
                "messageRetentionInDays": 1,
                "partitionCount": 1,
                "status": "Active"
            },
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_name'))]"
            ]
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
            "name": "[concat(parameters('namespaces_name'), '/', parameters('eventhubs_name'), '/', variables('consumergroup_name'))]",
            "apiVersion": "2017-04-01",
            "location": "[parameters('location')]",
            "scale": null,
            "properties": {
            },
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_name'))]",
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('namespaces_name'), parameters('eventhubs_name'))]"
            ]
        }
    ],
    "outputs": {
        "NamespaceDefaultConnectionString": {
            "type": "string",
            "value": "[listkeys(variables('authRuleResourceId'), variables('ehVersion')).primaryConnectionString]"
        }
    }
}
